##############################
# Tmux Configuration
# C-a Prefix
##############################
set -g prefix C-a
bind C-a send-prefix

set -g default-terminal "tmux-256color"

##############################
# Plugins 
##############################
# Plugin Settings
set -goq @themepack-status-right-area-middle-format "%I:%M%P"

set -g @thumbs-command '~/.local/bin/svim {}'
set -g @thumbs-upcase-command 'tmux set-buffer -- {} && tmux display-message \"Copied {}\"'

# set -g @thumgs-regexp-1 '(([.\w\-@~]+)?(/[.\w\-@]+)+:[0-9]+:[0-9]+)'
# set -g @thumgs-regexp-2 '/home/a[^:]+:[0-9]+\:[0-9]+'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Load TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Quicker escape
set -sg escape-time 10

# Zhell default
set -g default-command /usr/bin/zsh
set -g default-shell /usr/bin/zsh


# split current window horizontally
bind C-j split-window -v
bind C-k source ~/.config/tmux/pane-up.conf
# split current window vertically
bind C-h source ~/.config/tmux/pane-left.conf
bind C-l split-window -h -c "#{pane_current_path}"

# Open new panes in current path
bind c new-window -c "#{pane_current_path}"

# Window switching
bind ] next
bind [ prev
bind p paste-buffer -p
bind v copy-mode


# Close Panes
bind C-w kill-pane
bind C-q kill-session
bind '\' last-window

# Maximize Pane
bind C-m resize-pane -Z

# Toggle Mouse
bind M set -g mouse\; display-message "Mouse Toggled"

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# Easy Selection
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Easy copy Mode
bind-key -T prefix C-u copy-mode -u

# Refresh Screen
bind-key -T prefix r refresh-client

# Kill server
bind-key -T prefix K kill-server
bind-key -T prefix C-x kill-pane


##### Various 'Scripts'
# Smart pane switching with awareness of Vim splits.

bind-key -T prefix C-a display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y S "Refresh " "Swap Left" l "swap-window -t:-1" "Swap Right" r "swap-window -t:+1" "#{?pane_marked_set,,-}Swap Marked" s swap-window  Kill X kill-window Respawn R "respawn-window -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" Rename n "command-prompt -I \"#W\" \"rename-window -- '%%'\""  "New After" w "new-window -a" "New At End" W new-window

#ne -D} '#{?pane_marked_set,,-}Swap Marked' 's' {swap-pane} '' 'Kill' 'X' {kill-pane} 'Respawn' 'R' {respawn-pane -k} '#{?pane_marked,Unmark,Mark}' 'm' {select-pane -m} '#{?window_
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"


